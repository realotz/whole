// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// EmployeesColumns holds the columns for the "employees" table.
	EmployeesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "sex", Type: field.TypeEnum, Enums: []string{"unknown", "man", "woman"}, Default: "unknown"},
		{Name: "uuid", Type: field.TypeUUID},
		{Name: "account", Type: field.TypeString, Unique: true},
		{Name: "avatar", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true, Default: "unknown"},
		{Name: "email", Type: field.TypeString},
		{Name: "mobile", Type: field.TypeString, Nullable: true},
		{Name: "id_card", Type: field.TypeString, Nullable: true},
		{Name: "birthday", Type: field.TypeTime, Nullable: true},
		{Name: "password", Type: field.TypeString},
		{Name: "salt", Type: field.TypeString},
		{Name: "last_ip", Type: field.TypeString, Nullable: true},
		{Name: "last_time", Type: field.TypeTime, Nullable: true},
	}
	// EmployeesTable holds the schema information for the "employees" table.
	EmployeesTable = &schema.Table{
		Name:        "employees",
		Columns:     EmployeesColumns,
		PrimaryKey:  []*schema.Column{EmployeesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PermissionsColumns holds the columns for the "permissions" table.
	PermissionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "service", Type: field.TypeString, Unique: true},
		{Name: "path", Type: field.TypeString, Unique: true},
		{Name: "action", Type: field.TypeString, Unique: true},
		{Name: "desc", Type: field.TypeString, Nullable: true},
	}
	// PermissionsTable holds the schema information for the "permissions" table.
	PermissionsTable = &schema.Table{
		Name:        "permissions",
		Columns:     PermissionsColumns,
		PrimaryKey:  []*schema.Column{PermissionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RolesColumns holds the columns for the "roles" table.
	RolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "desc", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Enums: []string{"Off", "On"}, Default: "On"},
	}
	// RolesTable holds the schema information for the "roles" table.
	RolesTable = &schema.Table{
		Name:        "roles",
		Columns:     RolesColumns,
		PrimaryKey:  []*schema.Column{RolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// EmployeeRolesColumns holds the columns for the "employee_roles" table.
	EmployeeRolesColumns = []*schema.Column{
		{Name: "employee_id", Type: field.TypeInt64},
		{Name: "role_id", Type: field.TypeInt64},
	}
	// EmployeeRolesTable holds the schema information for the "employee_roles" table.
	EmployeeRolesTable = &schema.Table{
		Name:       "employee_roles",
		Columns:    EmployeeRolesColumns,
		PrimaryKey: []*schema.Column{EmployeeRolesColumns[0], EmployeeRolesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "employee_roles_employee_id",
				Columns:    []*schema.Column{EmployeeRolesColumns[0]},
				RefColumns: []*schema.Column{EmployeesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "employee_roles_role_id",
				Columns:    []*schema.Column{EmployeeRolesColumns[1]},
				RefColumns: []*schema.Column{RolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// RolePermissionsColumns holds the columns for the "role_permissions" table.
	RolePermissionsColumns = []*schema.Column{
		{Name: "role_id", Type: field.TypeInt64},
		{Name: "permission_id", Type: field.TypeInt64},
	}
	// RolePermissionsTable holds the schema information for the "role_permissions" table.
	RolePermissionsTable = &schema.Table{
		Name:       "role_permissions",
		Columns:    RolePermissionsColumns,
		PrimaryKey: []*schema.Column{RolePermissionsColumns[0], RolePermissionsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "role_permissions_role_id",
				Columns:    []*schema.Column{RolePermissionsColumns[0]},
				RefColumns: []*schema.Column{RolesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "role_permissions_permission_id",
				Columns:    []*schema.Column{RolePermissionsColumns[1]},
				RefColumns: []*schema.Column{PermissionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		EmployeesTable,
		PermissionsTable,
		RolesTable,
		EmployeeRolesTable,
		RolePermissionsTable,
	}
)

func init() {
	EmployeeRolesTable.ForeignKeys[0].RefTable = EmployeesTable
	EmployeeRolesTable.ForeignKeys[1].RefTable = RolesTable
	RolePermissionsTable.ForeignKeys[0].RefTable = RolesTable
	RolePermissionsTable.ForeignKeys[1].RefTable = PermissionsTable
}
